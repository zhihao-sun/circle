{"version":3,"sources":["assets/images/logo.svg","assets/images/blue-marker.svg","components/TopBar.js","constants.js","components/Register.js","components/Login.js","components/Gallery.js","components/CreatePostForm.js","components/CreatePostButton.js","components/AroundMarker.js","components/AroundMap.js","components/Home.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TopBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","logo","alt","props","isLoggedIn","onClick","handleLogout","es_icon","type","React","Component","API_ROOT","TOKEN_KEY","GEO_OPTIONS","enableHighAccuracy","maximumAge","timeout","POS_KEY","AUTH_HEADER","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","_this","form","validateFieldsAndScroll","err","values","console","log","fetch","concat","method","body","JSON","stringify","username","password","then","response","ok","text","Error","statusText","data","message","success","history","push","catch","error","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","es_form","onSubmit","Item","assign","label","rules","required","input","validator","onBlur","offset","es_button","htmlType","Link","to","Register","Form","create","name","NormalLoginForm","handleSuccessfulLogin","prefix","style","color","placeholder","Login","Gallery","images","map","image","objectSpread","customOverlay","captionStyle","user","caption","wrapperStyle","Gallery_default","backdropClosesModal","enableImageSelection","display","minHeight","width","border","overflow","backgroundColor","maxHeight","position","bottom","padding","fontSize","FormItem","NormalCreatePostForm","normFile","Array","isArray","fileList","beforeUpload","valuePropName","getValueFromEvent","upload","Dragger","CreatePostForm","CreatePostButton","_getPrototypeOf2","_len","length","args","_key","call","ModalText","visible","confirmLoading","showModal","handleOk","_JSON$parse","parse","localStorage","getItem","lat","lon","token","formData","FormData","set","originFileObj","headers","Authorization","resetFields","loadNearbyPosts","handleCancel","getFormRef","formInstance","_this$state","modal","title","onOk","okText","onCancel","ref","AroundMarker","isOpen","toggleOpen","prevState","_this$props$post","post","url","location","lng","isImagePost","icon","undefined","blueMarkerUrl","scaledSize","window","google","maps","Size","lib","onMouseOver","onMouseOut","onCloseClick","controls","NormalAroundMap","reloadMarkers","center","getCenter","radius","getRadius","topic","loadFacesAroundTheWorld","bounds","getBounds","ne","getNorthEast","right","LatLng","geometry","spherical","computeDistanceBetween","getMapRef","mapInstance","defaultZoom","defaultCenter","onDragEnd","onZoomChanged","posts","AroundMarker_AroundMarker","AroundMap","withScriptjs","withGoogleMap","TabPane","Tabs","RadioGroup","Radio","Group","Home","isLoadingGeoLocation","isLoadingPosts","onSuccessLoadGeoLocation","_position$coords","coords","longitude","latitude","setItem","onFailedLoadGeolocation","_ref","range","json","getPanelContent","spin","tip","getImagePosts","getVideoPosts","row","gutter","filter","col","thumbnail","thumbnailWidth","thumbnailHeight","Gallery_Gallery","onTopicChange","navigator","geolocation","getCurrentPosition","operations","CreatePostButton_CreatePostButton","onChange","es_radio","tabs","tabBarExtraContent","tab","googleMapURL","loadingElement","height","containerElement","mapElement","Main","getHome","Home_Home","Redirect","getLogin","Switch","Route","exact","path","render","component","App","Boolean","removeItem","TopBar_TopBar","Main_Main","hostname","match","ReactDOM","BrowserRouter","components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24315ad4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-marker.bc8cc4ea.svg\";","import React from 'react';\r\nimport { Icon } from 'antd';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nexport class TopBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n       \r\n         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n         <div className=\"App-title\">Circle</div>\r\n            \r\n       {this.props.isLoggedIn ?\r\n         <a className=\"logout\" onClick={this.props.handleLogout} >\r\n           <Icon type=\"logout\"/>{' '}Logout\r\n         </a> : null}\r\n     </header>\r\n    );\r\n  }\r\n}","export const API_ROOT = 'https://around-75015.appspot.com/api/v1';\r\nexport const TOKEN_KEY = 'TOKEN_KEY';\r\nexport const GEO_OPTIONS = {\r\n  enableHighAccuracy: true,\r\n  maximumAge: 3600000,\r\n  timeout: 27000\r\n}\r\n\r\nexport const POS_KEY = 'POS_KEY';\r\nexport const AUTH_HEADER = 'Bearer';\r\nexport const LOC_SHAKE = 0.02;","import React from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { API_ROOT } from '../constants';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass RegistrationForm extends React.Component {\r\n state = {\r\n   confirmDirty: false,\r\n   autoCompleteResult: [],\r\n };\r\n\r\n handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        // send request\r\n        fetch(`${API_ROOT}/signup`, {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            username: values.username,\r\n            password: values.password,\r\n          }),\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n              return response.text();\r\n            }\r\n            throw new Error(response.statusText);\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n            message.success('Registration Succeed!');\r\n            this.props.history.push('/login');\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n            message.error('Registration Failed.');\r\n          });\r\n      }\r\n    });\r\n }\r\n\r\n handleConfirmBlur = (e) => {\r\n   const value = e.target.value;\r\n   this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n }\r\n\r\n compareToFirstPassword = (rule, value, callback) => {\r\n   const form = this.props.form;\r\n   if (value && value !== form.getFieldValue('password')) {\r\n     callback('Two passwords that you enter is inconsistent!');\r\n   } else {\r\n     callback();\r\n   }\r\n }\r\n\r\n validateToNextPassword = (rule, value, callback) => {\r\n   const form = this.props.form;\r\n   if (value && this.state.confirmDirty) {\r\n     form.validateFields(['confirm'], { force: true });\r\n   }\r\n   callback();\r\n }\r\n\r\n render() {\r\n   const { getFieldDecorator } = this.props.form;\r\n\r\n   const formItemLayout = {\r\n     labelCol: {\r\n       xs: { span: 24 },\r\n       sm: { span: 8 },\r\n     },\r\n     wrapperCol: {\r\n       xs: { span: 24 },\r\n       sm: { span: 16 },\r\n     },\r\n   };\r\n   const tailFormItemLayout = {\r\n     wrapperCol: {\r\n       xs: {\r\n         span: 24,\r\n         offset: 0,\r\n       },\r\n       sm: {\r\n         span: 16,\r\n         offset: 8,\r\n       },\r\n     },\r\n   };\r\n\r\n   return (\r\n     <Form onSubmit={this.handleSubmit} className=\"register\">\r\n       <Form.Item\r\n         {...formItemLayout}\r\n         label=\"Username\"\r\n       >\r\n         {getFieldDecorator('username', {\r\n           rules: [{ required: true, message: 'Please input your username!' }],\r\n         })(\r\n           <Input />\r\n         )}\r\n       </Form.Item>\r\n       <Form.Item\r\n         {...formItemLayout}\r\n         label=\"Password\"\r\n       >\r\n         {getFieldDecorator('password', {\r\n           rules: [{\r\n             required: true, message: 'Please input your password!',\r\n           }, {\r\n             validator: this.validateToNextPassword,\r\n           }],\r\n         })(\r\n           <Input type=\"password\" />\r\n         )}\r\n       </Form.Item>\r\n       <Form.Item\r\n         {...formItemLayout}\r\n         label=\"Confirm Password\"\r\n       >\r\n         {getFieldDecorator('confirm', {\r\n           rules: [{\r\n             required: true, message: 'Please confirm your password!',\r\n           }, {\r\n             validator: this.compareToFirstPassword,\r\n           }],\r\n         })(\r\n           <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n         )}\r\n       </Form.Item>\r\n       <Form.Item {...tailFormItemLayout}>\r\n         <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n         <p>I already have an account, go back to <Link to=\"/Login\">login</Link></p>\r\n       </Form.Item>\r\n     </Form>\r\n   );\r\n }\r\n}\r\n\r\nexport const Register = Form.create({ name: 'register' })(RegistrationForm);","import React from 'react';\r\nimport { Form, Icon, Input, Button, message } from 'antd';\r\nimport { API_ROOT } from '../constants';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        fetch(`${API_ROOT}/login`, {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            username: values.username,\r\n            password: values.password,\r\n          }),\r\n        }).then((response) => {\r\n          if (response.ok) {\r\n            return response.text();\r\n          }\r\n          throw new Error(response.statusText);\r\n        }).then((data) => {\r\n          message.success('Login Success!');\r\n          console.log(data);\r\n          this.props.handleSuccessfulLogin(data);\r\n        }).catch((e) => {\r\n          console.log(e);\r\n          message.error('Login Failed.');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          Or <Link to=\"/register\">register now!</Link>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GridGallery from 'react-grid-gallery';\r\n\r\nexport class Gallery extends React.Component {\r\n  static propTypes = {\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        user: PropTypes.string.isRequired,\r\n        src: PropTypes.string.isRequired,\r\n        thumbnail: PropTypes.string.isRequired,\r\n        caption: PropTypes.string,\r\n        thumbnailWidth: PropTypes.number.isRequired,\r\n        thumbnailHeight: PropTypes.number.isRequired\r\n      })\r\n    ).isRequired\r\n  };\r\n\r\n  render() {\r\n    const images =\r\n      this.props.images.map((image) => {\r\n        return {\r\n          ...image,\r\n          customOverlay: (\r\n            <div style={captionStyle}>\r\n              <div>{`${image.user}: ${image.caption}`}</div>                            \r\n            </div>)\r\n        }\r\n      });\r\n    return (\r\n      <div style={wrapperStyle}>\r\n        <GridGallery backdropClosesModal images={images} enableImageSelection={false} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst wrapperStyle = {\r\n  display: \"block\",\r\n  minHeight: \"1px\",\r\n  width: \"100%\",\r\n  border: \"1px solid #ddd\",\r\n  overflow: \"auto\"\r\n};\r\n\r\nconst captionStyle = {\r\n  backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n  maxHeight: \"240px\",\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  bottom: \"0\",\r\n  width: \"100%\",\r\n  color: \"white\",\r\n  padding: \"2px\",\r\n  fontSize: \"90%\"\r\n};","import React from 'react';\r\nimport { Form, Upload, Icon, Input } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass NormalCreatePostForm extends React.Component {\r\n  normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  }\r\n\r\n  beforeUpload = () => false\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 14 },\r\n    };\r\n\r\n    return (\r\n      <Form>\r\n        <FormItem {...formItemLayout} label=\"Message\">\r\n          {getFieldDecorator('message', {\r\n            rules: [{\r\n              required: true,\r\n              message: 'Please input your message',\r\n            }],\r\n          })(\r\n           <Input placeholder=\"Please input your message\" />\r\n         )}\r\n       </FormItem>\r\n       <FormItem {...formItemLayout} label=\"Image\" >\r\n         <div className=\"dropbox\">\r\n         {getFieldDecorator('image', {\r\n             valuePropName: 'fileList',\r\n             getValueFromEvent: this.normFile,\r\n             rules: [{\r\n               required: true,\r\n               message: 'Please select an image',\r\n             }],\r\n           })(\r\n             <Upload.Dragger name=\"files\" beforeUpload={this.beforeUpload}>\r\n               <p className=\"ant-upload-drag-icon\">\r\n                 <Icon type=\"inbox\" />\r\n               </p>\r\n               <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n               <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n             </Upload.Dragger>\r\n           )}\r\n         </div>\r\n       </FormItem>\r\n     </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport const CreatePostForm = Form.create()(NormalCreatePostForm);","import React from 'react';\r\nimport { Modal, Button, message } from 'antd';\r\nimport { CreatePostForm } from './CreatePostForm';\r\nimport { POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants';\r\n\r\nexport class CreatePostButton extends React.Component {\r\n  state = {\r\n    ModalText: 'Content of the modal',\r\n    visible: false,\r\n    confirmLoading: false,\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  handleOk = () => {\r\n    this.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(values);\r\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\r\n        const token = localStorage.getItem(TOKEN_KEY);\r\n        const formData = new FormData();\r\n        formData.set('lat', lat);\r\n        formData.set('lon', lon);\r\n        formData.set('message', values.message);\r\n        formData.set('image', values.image[0].originFileObj);\r\n\r\n        this.setState({ confirmLoading: true });\r\n        fetch(`${API_ROOT}/post`, {\r\n            method: 'POST',\r\n            body: formData,\r\n            headers: {\r\n              Authorization: `${AUTH_HEADER} ${token}`,\r\n            }\r\n          }).then((response) => {\r\n            if (response.ok) {\r\n              this.form.resetFields();\r\n              this.setState({ visible: false, confirmLoading: false });\r\n              return this.props.loadNearbyPosts();\r\n            }\r\n            throw new Error(response.statusText);\r\n          })\r\n          .then(() => message.success('Post created successfully!'))\r\n          .catch((e) => {\r\n            console.log(e);\r\n            this.setState({ confirmLoading: false });\r\n            message.error('Failed to create the post.');\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  }\r\n\r\n  getFormRef = (formInstance) => {\r\n    this.form = formInstance;\r\n  }\r\n\r\n  render() {\r\n    const { visible, confirmLoading } = this.state;\r\n    return (\r\n      <div>\r\n    \t\t<Button type=\"primary\" onClick={this.showModal}>\r\n        \tCreate New Post\r\n      \t</Button>\r\n       \t<Modal title=\"Create New Post\"\r\n               visible={visible}\r\n               onOk={this.handleOk}\r\n               okText=\"Create\"\r\n               confirmLoading={confirmLoading}\r\n               onCancel={this.handleCancel}\r\n       \t>\r\n        \t<CreatePostForm ref={this.getFormRef}/>\r\n       \t</Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Marker, InfoWindow } from 'react-google-maps';\r\nimport blueMarkerUrl from '../assets/images/blue-marker.svg';\r\n\r\nexport class AroundMarker extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n  }\r\n\r\n  toggleOpen = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        isOpen: !prevState.isOpen\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { user, message, url, location, type } = this.props.post;\r\n    const { lat, lon: lng } = location;\r\n    const isImagePost = type === 'image';\r\n    const icon = isImagePost ? undefined : {\r\n      url: blueMarkerUrl,\r\n      scaledSize: new window.google.maps.Size(26, 41),\r\n    }\r\n    return (\r\n      <Marker\r\n        position={{ lat, lng }}\r\n        onMouseOver={isImagePost ? this.toggleOpen : undefined}\r\n        onMouseOut={isImagePost ? this.toggleOpen : undefined}\r\n        onClick={isImagePost ? undefined : this.toggleOpen}\r\n        icon={icon}\r\n      >\r\n        {this.state.isOpen ? (\r\n          <InfoWindow onCloseClick={this.toggleOpen}>\r\n            <div>\r\n              {isImagePost ?\r\n                <img src={url} alt={message} className=\"around-marker-image\"/>\r\n                :\r\n                <video src={url} className=\"around-marker-video\" controls/>\r\n              }\r\n\r\n              <p>{`${user}: ${message}`}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </Marker>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\r\nimport { AroundMarker } from './AroundMarker';\r\nimport { POS_KEY } from '../constants';\r\n\r\nclass NormalAroundMap extends React.Component {\r\n  reloadMarkers = () => {\r\n    const center = this.getCenter();\r\n    const radius = this.getRadius();\r\n    if (this.props.topic === 'around') {\r\n      this.props.loadNearbyPosts(center, radius);\r\n    } else {\r\n      this.props.loadFacesAroundTheWorld();\r\n    }\r\n  }\r\n\r\n  getCenter = () => {\r\n    const center = this.map.getCenter();\r\n    return { lat: center.lat(), lon: center.lng() }\r\n  }\r\n\r\n  getRadius = () => {\r\n    const center = this.map.getCenter();\r\n    const bounds = this.map.getBounds();\r\n    console.log(bounds);\r\n    if (center && bounds) {\r\n      const ne = bounds.getNorthEast();\r\n      const right = new window.google.maps.LatLng(center.lat(), ne.lng());\r\n      return 0.001 * window.google.maps.geometry.spherical.computeDistanceBetween(center, right);\r\n    }\r\n  }\r\n\r\n  getMapRef = (mapInstance) => {\r\n    this.map = mapInstance;\r\n  }\r\n\r\n  render() {\r\n    const { lat, lon: lng } = JSON.parse(localStorage.getItem(POS_KEY));\r\n    return (\r\n      <GoogleMap\r\n        ref={this.getMapRef}\r\n        defaultZoom={11}\r\n        defaultCenter={{ lat, lng }}\r\n        onDragEnd={this.reloadMarkers}\r\n        onZoomChanged={this.reloadMarkers}\r\n      >\r\n        {this.props.posts.map((post) => <AroundMarker post={post} key={post.url}/>)}\r\n      </GoogleMap>\r\n    );\r\n  }\r\n}\r\n\r\nexport const AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));","import React from 'react';\r\nimport { Tabs, Spin, Row, Col, Radio } from 'antd';\r\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants';\r\nimport { Gallery } from './Gallery';\r\nimport { CreatePostButton } from './CreatePostButton';\r\nimport { AroundMap } from './AroundMap';\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst RadioGroup = Radio.Group;\r\n\r\nexport class Home extends React.Component {\r\n  state = {\r\n    isLoadingGeoLocation: false,\r\n    error: '',\r\n    isLoadingPosts: false,\r\n    posts: [],\r\n    topic: 'around'\r\n  }\r\n\r\n  componentDidMount() {\r\n    if ('geolocation' in navigator) {\r\n      this.setState({ isLoadingGeoLocation: true, error: '' });\r\n      navigator.geolocation.getCurrentPosition(\r\n        this.onSuccessLoadGeoLocation,\r\n        this.onFailedLoadGeolocation,\r\n        GEO_OPTIONS\r\n      );\r\n    } else {\r\n      this.setState({ error: 'Geolocation is not supported.' });\r\n    }\r\n  }\r\n\r\n  onSuccessLoadGeoLocation = (position) => {\r\n    const { longitude, latitude } = position.coords;\r\n    localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon: longitude }));\r\n    this.setState({ isLoadingGeoLocation: false, error: '' });\r\n    this.loadNearbyPosts();\r\n  }\r\n\r\n  onFailedLoadGeolocation = (err) => {\r\n    this.setState({ isLoadingGeoLocation: false, error: 'Failed to load geolocation: ' + err.message });\r\n  }\r\n\r\n  loadNearbyPosts = (center, radius) => {\r\n    const { lat, lon } = center ? center : JSON.parse(localStorage.getItem(POS_KEY));\r\n    const range = radius ? radius : 20;\r\n    const token = localStorage.getItem(TOKEN_KEY);\r\n\r\n    this.setState({ isLoadingPosts: true, error: '' });\r\n\r\n    fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=${range}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `${AUTH_HEADER} ${token}`,\r\n      }\r\n    }).then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error('Failed to load posts.');\r\n    }).then((data) => {\r\n      console.log(data);\r\n      this.setState({ isLoadingPosts: false, posts: data ? data : [] });\r\n    }).catch((e) => {\r\n      console.log(e.message);\r\n      this.setState({ isLoadingPosts: false, error: e.message });\r\n    });\r\n  }\r\n\r\n  getPanelContent = (type) => {\r\n    const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\r\n    if (error) {\r\n      return <div>{error}</div>\r\n    } else if (isLoadingGeoLocation) {\r\n      return <Spin tip=\"Loading geo location...\"/>\r\n    } else if (isLoadingPosts) {\r\n      return <Spin tip=\"Loading posts...\" />\r\n    } else if (posts.length > 0) {\r\n      return type === 'image' ? this.getImagePosts() : this.getVideoPosts();\r\n    } else {\r\n      return 'No nearby posts.';\r\n    }\r\n  }\r\n\r\n  getVideoPosts = () => {\r\n    return (\r\n      <Row gutter={32}>\r\n        {this.state.posts.filter((post) => post.type === 'video').map((post) => {\r\n          return (\r\n            <Col span={6} key={post.url}>\r\n              <video src={post.url} controls className=\"video-block\"/>\r\n              <p>{post.user}: {post.message}</p>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  getImagePosts = () => {\r\n    const images = this.state.posts\r\n      .filter((post) => post.type === 'image')\r\n      .map((post) => {\r\n        return {\r\n          user: post.user,\r\n          src: post.url,\r\n          thumbnail: post.url,\r\n          caption: post.message,\r\n          thumbnailWidth: 400,\r\n          thumbnailHeight: 300,\r\n        }\r\n      });\r\n\r\n    return (<Gallery images={images}/>);\r\n  }\r\n\r\n  onTopicChange = (e) => {\r\n    const topic = e.target.value;\r\n    this.setState({ topic });\r\n    if (topic === 'around') {\r\n      this.loadNearbyPosts();\r\n    } else {\r\n      this.loadFacesAroundTheWorld();\r\n    }\r\n  }\r\n\r\n  loadFacesAroundTheWorld = () => {\r\n    const token = localStorage.getItem(TOKEN_KEY);\r\n    this.setState({ isLoadingPosts: true, error: '' });\r\n    fetch(`${API_ROOT}/cluster?term=face`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `${AUTH_HEADER} ${token}`,\r\n        },\r\n      }).then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(response.statusText);\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({ isLoadingPosts: false, posts: data ? data : [] });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        this.setState({ isLoadingPosts: false, error: 'Loading face images failed.' });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts}/>;\r\n    return (\r\n      <div className=\"home\">\r\n        <RadioGroup onChange={this.onTopicChange} value={this.state.topic} className=\"topic-radio-group\">\r\n          <Radio value=\"around\">Posts Around Me</Radio>\r\n          <Radio value=\"face\">Faces Around The World</Radio>\r\n        </RadioGroup>\r\n        <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\r\n          <TabPane tab=\"Image Posts\" key=\"1\">\r\n            {this.getPanelContent('image')}\r\n          </TabPane>\r\n          <TabPane tab=\"Video Posts\" key=\"2\">\r\n            {this.getPanelContent('video')}\r\n          </TabPane>\r\n          <TabPane tab=\"Map\" key=\"3\">\r\n            <AroundMap\r\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\r\n              loadingElement={<div style={{ height: `100%` }} />}\r\n              containerElement={<div style={{ height: `800px` }} />}\r\n              mapElement={<div style={{ height: `100%` }} />}\r\n              posts={this.state.posts}\r\n              loadNearbyPosts={this.loadNearbyPosts}\r\n              loadFacesAroundTheWorld={this.loadFacesAroundTheWorld}\r\n              topic={this.state.topic}\r\n            />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Register } from './Register';\r\nimport { Login } from './Login';\r\nimport { Home } from './Home';\r\nimport { Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nexport class Main extends React.Component {\r\n\tgetHome = () => {\r\n\t\treturn this.props.isLoggedIn ? <Home/> : <Redirect to=\"/login\" />;\r\n\t}\r\n\r\n \tgetLogin = () => {\r\n\t\treturn this.props.isLoggedIn ? <Redirect to=\"/home\"/> : <Login handleSuccessfulLogin={this.props.handleSuccessfulLogin} />;\r\n\t}\r\n\trender() {\r\n\t   \treturn (\r\n\t\t    <div className=\"main\">\r\n\t\t      <Switch>\r\n\t\t         <Route exact path=\"/\" render={this.getLogin}/>\r\n\t\t         <Route path=\"/login\" render={this.getLogin}/>\r\n\t\t         <Route path=\"/register\" component={Register}/>\r\n\t\t         <Route path=\"/home\" render={this.getHome}/>\r\n\t\t         <Route render={this.getLogin}/>\r\n\t\t       </Switch>\r\n\t\t    </div>\r\n\t\t);\r\n }\r\n}\r\n","import React, { Component } from 'react';\nimport { TopBar } from './TopBar';\nimport { Main } from './Main';\nimport { TOKEN_KEY } from '../constants';\n\nclass App extends Component {\n  state = {\n    isLoggedIn: Boolean(localStorage.getItem(TOKEN_KEY)),\n  }\n\n  handleSuccessfulLogin = (token) => {\n    localStorage.setItem(TOKEN_KEY, token);\n    this.setState({ isLoggedIn: true });\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    this.setState({ isLoggedIn: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar isLoggedIn = {this.state.isLoggedIn} handleLogout={this.handleLogout} />\n        <Main handleSuccessfulLogin={this.handleSuccessfulLogin} isLoggedIn={this.state.isLoggedIn} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t  <App />\n\t</BrowserRouter>, \n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}